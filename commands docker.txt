

docker ps
docker version

docker run docker/whalesay cowsay docker

docker run -it ubuntu
exit


docker container ls
ou 
docker ps (alias)


para ver quais os container foram executados
docker ps -a


//rodar um container com interação (-it)


docker run -it node


25 - Container X VM (Virtual machine)


26 - Rodando container em background (detacked)

docker run -d nginx

27 - Expondo porta de contaniner

-p 5000:80;

docker run -d -p 5000:80  nginx

28 - Parando container

docker stop 452d016e3c16


29 - Reiniando container

docker start <id>

docker start <name>


30 - Definindo nome para um container

docker run -d -p  5000:80 --name nginx_app nginx

31 - Acessando os logs de um container

docker logs <name>
docker logs <id>


32 - Removendo container

docker rm <name>
docker rm <id>

------Se estiver rodando para parar e remomer---------------
docker rm -f <name>
docker rm -f <id>




--------------------------------Seção 3 ------------------------------------


CRIANDO IMAGENS E AVANÇANDO EM CONTAINERS


35 - O que é imagem?

36 - Como escolher uma imagem

docker run -d -p 8080:80 --name meu_apache

37 - Criando a nossa primeira imagem

FROM: imagem base;
WORKDIR: diretório da aplicação;
EXPOSE: porta da aplicação;
COPY: quais arquivos precisam ser copiados;


38 - Rodando a nossa imagem em um container

docker build <diretório da imagen>

caso o Dockerfile esteja na mesma pasta utilizar o comando

docker build .

 docker run -d -p 3000:3000 2bf49bc23d02


docker run -d -p 3005:3000 --name MinhaPrimeiraImagem 2bf49bc23d02

40 - Cache de camadas

41 - Fazendo o download de IMAGENS

docker pull python

42 - Mais informações sobre os comandos

docker run --help

43 - Multiplas aplicações do mesmo container

44 - Nomeando IMAGENS

docker tag <id_imagen> <nome_imagen> em letras minusculas

exemplo: 
docker tag 443a10196b08 minha_imagem_nomeada

incluindo TAG na imagem
docker tag <id_imagen> <nome_imagen>:<nome>
exemplo: 
docker tag 443a10196b08 minha_imagem_nomeada:minha_tag


45 - Nomeando imagem no build
docker build -t <nome_imagem>
docker build -t <nome_imagem>:<tag_imagem>

exemplo:

docker build  -t meunode_novo:v1


46 - Reiniciando container com interatividade

docker start -i <nome_container>
docker start -i <id_container>

exemplo: 

docker start -i meunode                 


47 - Removendo imagens

docker rmi -f <nome_imagem> 

exemplo:
docker rmi -f  443a10196b08

48 - Remoção de imagens e containers não utilizados

docker system prune

49 - Removendo containers após utilização

docker run --rm <container>

exemplo
docker run -d --rm  -p  3000:3000 --name teste cf9fa9470165

obs: ao realizar o stop do container o mesmo será apagado em função da flag --rm


50 - Copiando arquivos do container

docker cp <nome_container>:<caminho_arquivo> <caminho_destino>
exemplo:
docker cp teste:/app/app.js ./copia/

51 - Verificando processamento do container

docker top <container>

exemplo:

docker top teste

52 - Inspecionando container

docker inspec <container>

exemplo:

docker inspect teste


53 - Verificando processamento

docker stats <container>

54 - Autenticacao no terminal

https://hub.docker.com

logar no hub 

docker login
login e senha


55 - Encerrar conecção

docker logout


56 - Enviando imagens para o hub

docker push <imagem>

1 - deve criar o repositorio no docker hub

2 - deve renomear a imagem conforme a criação no hub
exemplo:
docker build . -t fabioramosalves/nodeteste

3 - Realizar o envio para o repositório remoto

exemplo:
docker push fabioramosalves/nodeteste


57 - Atualizando imagens no Hub 

1 - atualizar a tag com o docker build incluindo a tag
exemplo:
docker build . -t fabioramosalves/nodeteste:version1

2 - Subir a nova versao 

exemplo:

docker push fabioramosalves/nodeteste:version1



58 - Utilizando nossa imagem

docker pull fabioramosalves/nodeteste:version1

docker run --name teste_imagem -p 3000:3000 -d fabioramosalves/nodeteste:version1




--------------Seção 4 -----------------------------------

61 - O que são volumes?

forma prática de persistir dados sem depender de containers.

62 - Tipos de volumes

- Anonimos
- Nomeados
- Bind mounts


63 - Criando o projeto para trabalhar com volumes

65 - Volumes anônimos

docker run -v /data

exemplo
docker run -d -p 5001:80 --name phpcontainer --rm -v /data  phpmessages

- verificando volumes

docker volume ls

docker inspect <nome_container>


66 - volumes Nomeados


docker run -v nomedovolume:/data

exemplo:
docker run -d -p 5001:80 --name phpcontainer --rm -v volumephp:/var/www/html/messages  --rm  phpmessages


67 - Bind mounts
para salvar volumes no host da maquina que executa o docker

docker run /dir/data:/data

exemplo:
docker run -d -p 5001:80 --name phpcontainer -v  C:\Estudo\Docker\volumes\messages:/var/www/html/messages  --rm  phpmessages


68 - O poder extra do Bind Mount 

persistir informações do projeto

exemplo:
docker run -d -p 5001:80 --name phpcontainer -v  C:\Estudo\Docker\volumes\:/var/www/html/ --rm  phpmessages         



